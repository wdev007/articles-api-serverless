org: wdev007
app: articles
service: articles
frameworkVersion: '2'

plugins:
  - serverless-dotenv-plugin
  - serverless-plugin-typescript
  - serverless-dynamodb-local
  - serverless-offline

provider:
  name: aws
  runtime: nodejs12.x
  lambdaHashingVersion: 20201221
  stage: dev
  region: us-east-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
      Resource: "arn:aws:dynamodb:${self:provider.region}:*:table/articles-*"

functions:
  jwtAuth:
    handler: handler.jwtAuth
  basicAuth:
    handler: handler.basicAuth
  signIn:
    handler: handler.signIn
    events:
      - http:
          path: auth/login
          method: post
          cors: true
  articlesCreate:
    handler: handler.create
    memorySize: 128
    events:
    - http: 
        path: articles
        method: post
        cors: true
        # authorizer:
        #   name: jwtAuth
  articlesGetAll:
    handler: handler.getAll
    memorySize: 128
    events:
    - http: 
        path: articles
        method: get
        cors: true
        # authorizer:
        #   name: jwtAuth
  articlesGet:
    handler: handler.get
    memorySize: 128
    events:
    - http: 
        path: articles/{id}
        method: get
        cors: true  
        # authorizer:
        #   name: jwtAuth
  articlesUpdate:
    handler: handler.update
    memorySize: 128
    events:
    - http: 
        path: articles/{id}
        method: patch
        cors: true
        # authorizer:
        #   name: jwtAuth
  articlesDelete:
    handler: handler.exclude
    memorySize: 128
    events:
    - http: 
        path: articles/{id}
        method: delete
        cors: true
        # authorizer:
        #   name: jwtAuth
  articlesGetAllHistory:
    handler: handler.getAllHistory
    memorySize: 128
    events:
    - http: 
        path: articles/history/{id}
        method: get
        cors: true
        # authorizer:
        #   name: jwtAuth
resources:
  Resources:
    articlesTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: articles
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    articlesTableHistory:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: articles-history
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
 
custom:
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      heapInitial: 200m
      heapMax: 1g
      migrate: true
      seed: true
      convertEmptyValues: true